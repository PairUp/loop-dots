#!/usr/bin/env perl

use strict;
use Config;
BEGIN {
    @INC = ($Config{privlib}, $Config{archlib});
}
use Getopt::Long;

my $root = $ENV{DOTDOTDOTROOT} || '';
if (not($root) and my $home = $ENV{HOME}) {
    $root =
        -d "$home/..." ? "$home/..." :
        -d "$home/.dotdotdot" ? "$home/.dotdotdot" :
        '';
}
my $help = 0;
my $make = 0;
my $backup = 0;
my $setup = 0;

my @dotfiles = ();

my ($sec, $min, $hour, $mday, $month, $year) = localtime;
$year += 1900;
my $date = sprintf "%s-%s-%s-%s:%s:%s",
    $year, $month, $mday, $hour, $min, $sec;

while (1) {
    get_options();

    if ($setup) {
        handle_setup();
        last;
    }

    sanity();

    if ($help) {
        print usage();
    }
    elsif ($make) {
        handle_make();
    }
    elsif ($backup) {
        handle_backup();
    }
    elsif ($setup) {
        handle_setup();
    }
    else {
        die usage();
    }

    last;
};

sub get_options {
    GetOptions(
        "help" => \$help,
        "make" => \$make,
        "backup" => \$backup,
        "setup" => \$setup,
        "root=s"  => \$root,
    ) or die usage();
}

sub sanity {
    die msg_root_missing()
        unless $root and -d $root;
}

sub handle_make {
    die "--make not implemented yet";
}

sub handle_backup {
    die "--backup not implemented yet";
}

sub usage {
    return <<'...';
Usage:

    ... --help                      # Print this help message
    ... --make [dot-file-names]     # Make and install your dot files
    ... --backup [dot-file-names]   # Make a backup copy of your dot files
    ... --setup                     # First time setup of ...

    perldoc ...                     # Browse the full ... documentation

...
}

sub msg_root_missing {
    return <<'...';
Cannot determine your "root" directory. This is the directory where your
... configuration lives. Typically it either ~/.../ or ~/.dotdotdot/ but it
can be overridden by the DOTDOTDOTROOT environment variable.
...
}

sub handle_setup {
    die "--setup is not yet supported. Please configure ... by hand\n";
}

=head1 NAME

"..." - A program for managing and sharing your dot files

=head1 SYNOPSIS

    > ... --help
    > ... --make
    > ... --backup
    > ... --setup

=head1 DESCRIPTION

DotDotDot, also known as dotdotdot, aka '...' is a simple system for managing
and sharing your *nix dot (user configuration) files.

C<...>


=head1 AUTHOR

Ingy döt Net <ingy@cpan.org>

=head1 COPYRIGHT

Copyright (c) 2009. Ingy döt Net.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

See L<http://www.perl.com/perl/misc/Artistic.html>

=cut
